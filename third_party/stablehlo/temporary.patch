diff --ruN a/stablehlo/stablehlo/reference/Tensor.cpp b/stablehlo/stablehlo/reference/Tensor.cpp
--- stablehlo/stablehlo/reference/Tensor.cpp
+++ stablehlo/stablehlo/reference/Tensor.cpp
@@ -423,7 +423,7 @@
   getType().print(os);
   os << " {";
   Index idx{};
-  printHelper(os, *this, getShape(), idx, /*index=*/1);
+  printHelper(os, *this, getShape(), idx, /*indent=*/1);
   os << "}";
 }
 
diff --ruN a/stablehlo/stablehlo/transforms/StablehloLegalizeQuantToInt.cpp b/stablehlo/stablehlo/transforms/StablehloLegalizeQuantToInt.cpp
--- stablehlo/stablehlo/transforms/StablehloLegalizeQuantToInt.cpp
+++ stablehlo/stablehlo/transforms/StablehloLegalizeQuantToInt.cpp
@@ -1270,12 +1270,13 @@
     OperationState state(op->getLoc(), op->getName().getStringRef(), operands,
                          newResultTypes, op->getAttrs(), op->getSuccessors());
     for (Region &region : op->getRegions()) {
-      Region &newRegion = *state.addRegion();
-      rewriter.inlineRegionBefore(region, newRegion, newRegion.begin());
-      if (failed(
-              rewriter.convertRegionTypes(&newRegion, *getTypeConverter()))) {
+      auto newRegion = std::make_unique<Region>(op);
+      rewriter.inlineRegionBefore(region, *newRegion, newRegion->begin());
+      if (failed(rewriter.convertRegionTypes(newRegion.get(),
+                                             *getTypeConverter()))) {
         return failure();
       }
+      state.addRegion(std::move(newRegion));
     }
     Operation *newOp = rewriter.create(state);
     rewriter.replaceOp(op, newOp);

